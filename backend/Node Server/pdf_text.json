{
    "Page1": "CT 2- Question Bank  \n \nUnit 2 \u2013 4 Marks  \n1. Mention default  users  in Oracle  and SQL  server.   \nORACLE default users, will be created at the time of ORACLE software installation  \na. SYS (Super user will all DBA rights , can\u2019t be changed)  \nb. SYSTEM (With Minimal DBA rights  \nc. SCOTT (User without DBA rights)  \nd. SQL server default users, will be created at the time of SQL Server \nsoftware installation  \ne. SA ( System Administrator , It is equivalent to SYS in Oracle and can\u2019t be \nchanged)  \nf. BUILT -IN\\Administrators ( Associated with the local administrators\u2019 \ngroup on the Windows server)  \n \n2. How  to create user in Oracle?  \n\u2022 Creating users is one of the main tasks you will perform as a database operator \nor DBA  \n\u2022 In most organization ,  this process is standardized , well documented, and \nsurely managed  \n\u2022 The DBA had written a script to create a user for every developer working on \nthe project  \n\u2022 This script granted privileges to read and write data to the database scheme  \n\u2022 Regardless of the database you use , creating the user is generally an easy task \nonce a policy is documented and followed  \n \n3. List out the best practices for Administrators and Managers.  \n\u2022 Creating users is one of the main tasks you will perform as a database operator \nor DBA  \n\u2022 In most organization , this process is standardized , well documented, and \nsurely managed  \n\u2022 The DBA had written a script to create a user for every developer working on \nthe project  ",
    "Page2": "\u2022 This script granted privileges to read and write data to the database scheme  \n\u2022 Regardless of the database you use , creating the user is generally an easy task \nonce a policy is documented and followed  \n\u2022 . Outline your business goals.  \n\u2022 A few example goals your business might have are:  \n\u2022 Improve decision -making  \n\u2022 Create/improve automations and processes  \n\u2022 Audience targeting/create a buyer profile  \n\u2022 Find customer buying habits/patterns  \n\u2022 Train sales and marketing teams on data use  \n\u2022 2. Prioritize data protection and security.  \n\u2022 Focus on data quality.  \n\u2022 Reduce duplicate data  \n\u2022 Ensure your data is readily accessible to your team.  \n\u2022 Create a data recovery strategy.  \n\u2022 Use a quality data management software.  \n \n4. Draw the diagram fo r creating role with ORACLE  \n \n5. Mention the two clauses  in creating users in ORACLE . \n\u2022 When creating users in Oracle, two important clauses are:  \n\u2022 1. **IDENTIFIED BY:** Specifies the password for the new user.  \n\u2022    - Example: `CREATE USER username IDENTIFIED BY password;`  \n",
    "Page3": " \n\u2022 2. **DEFAULT TABLESPACE:** Specifies the default tablespace \nwhere the user's objects will be stored.  \n   - Example: `CREATE USER username IDENTIFIED BY password \nDEFAULT TABLESPACE users;`  \n6. Write about the following in SQL server  \nI. Removing user II. Modifying user  \nI. Removing a User in SQL Server  \n1. Connect to the Database:  \no Use USE database_name;  to specify the database context.  \n2. Execute the DROP USER Command:  \no Remove the user with DROP USER username; . \nII. Modifying a User in SQL Server  \n1. Connect to the Database:  \no Use USE database_name;  to specify the database context.  \n2. Execute the ALTER USER Command:  \no Modify user attributes such as default schema or username:  \n\u25aa Change default schema: ALTER USER username WITH DEFAULT_SCHEMA = \nschema_name;  \n\u25aa Rename user: ALTER USER username WITH NAME = new_username;  \n\u2022  \n7. Mention the d ifferent  types  of users  in handling  the Database.  \n  Database Administrators (DBAs):  \n\u2022 Responsible for overall management and maintenance of the database system.  \n\u2022 Perform tasks such as installation, configuration, backup, recovery, and security management.  \n  Developers:  \n\u2022 Design and develop database applications.  \n\u2022 Write and optimize SQL queries, stored procedures, and functions.  \n  End Users:  \n\u2022 Use the database applications to perform specific tasks related to their role.  \n\u2022 Interact with the database through user interfaces or reporting tools.  ",
    "Page4": "  Data Analysts:  \n\u2022 Analyze data stored in the database to generate reports and insights.  \n\u2022 Use tools like SQL, data visualization software, and statistical analysis tools.  \n  Security Administrators:  \n\u2022 Focus on managing database security.  \n\u2022 Implement access controls, monitor database activity, and ensure compliance with security policies.  \n  Application Administrators:  \n\u2022 Manage and support specific database applications.  \n\u2022 Ensure the application runs smoothly and troubleshoot any issues related to database access.  \n  Backup Operators:  \n\u2022 Responsible for managing database backups and restorations.  \n\u2022 Ensure data integrity and availability through regular backup schedules.  \n \n8. Compare  Linked Servers and Remote Server.  \n \n \n9. Write short notes  the Password Policies in ORACLE.  \n\u2022 Password policy is a set of guidelines that enhances the robustness of the \npassword and reduces the likelihood of its being broken  \n",
    "Page5": "\u2022 Importance of Password Policies  \no The frontline defence of your account is your password.  \no If your password is weak, the hacker can break in, destroy your \ndata, and violate your sense of security .  \nFor this specific reason, most of the companies invest considerable resources \nto strengthen authentication by adopting technological measures that protect \ntheir assets  \n \n10. Brief about the creation of a SQL server User.  \nCreating a user in SQL Server involves a few key steps. Here's a brief guide in \nfour points:  \n \n1. **Connect to SQL Server:**  \n   - Use SQL Server Management Studio (SSMS) or another SQL interface to \nconnect to the SQL Server instance.  \n \n2. **Create a Login:**  \n   - Create a server -level login, which can be either SQL Server authenticated \nor Windows authenticated.  \n   - Example:  \n     ```sql  \n     CREATE LOGIN login_name WITH PASSWORD = 'password';  \n     ``` \n \n3. **Create a Database User:**  \n   - Map the login to a database user within a specific database.  \n   - Example:  \n     ```sql  \n     USE database_name;  \n     CREATE USER user_name FOR LOGIN login_name;  \n     ``` \n \n4. **Assign Roles and Permissions:**  ",
    "Page6": "   - Grant necessary roles and permissions to the user to perform specific tasks.  \n   - Example:  \n     ```sql  \n     ALTER ROLE db_datareader ADD MEMBER user_name;  \n     ``` \n12 Marks  \n1)Elaborate on the creation of Profiles in ORACLE.  \n\u2713 Creating Profiles in ORACLE  \n\u2713 A profile in ORACLE helps define two elements of Security  \n\u2713 Restrictions on Resources  \n\u2713 Implementation of password policy  \n\u2713 The following figure shows the two aspects of a profile in ORACLE  \n  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nDefining and Using Profiles\u2026  \n\u2713 In this syntax:  \n\u25aa First, specify the name of the profile that you want to create.  \n\u25aa Second, specify the  LIMIT  on either database resources or password  \n\u2713 Resource Parameters  \n\u25aa SESSIONS_PER_USER  \u2013 specify the number of concurrent sessions \nPROFILE  \nPASSWORD  \n RESOURCES  \nAging  \nUsage  \nVerification  \nCPU  \nMemory  ",
    "Page7": "that a user can have when connecting to the Oracle database.  \n\u25aa CPU_PER_SESSION  \u2013 specify the CPU time limit for a user session, \nrepresented in hundredth of seconds.  \n\u25aa CPU_PER_CALL  \u2013 specify the CPU time limit for a call such as a \nparse, execute, or fetch, expressed in hundredths of seconds.  \n\u25aa CONNECT_TIME  \u2013 specify the total elapsed time limit for a user \nsession, expressed in minutes.  \n\u25aa IDLE_TIME  \u2013 specify the number of minutes allowed periods of \ncontinuous inactive time during a user session. Note that the long -\nrunning queries and other operations will not subject to this limit.  \n\u25aa LOGICAL_READS_PER_SESSION  \u2013 specify the allowed number of \ndata blocks read in a user session, including blocks read from both \nmemory and disk.  \n\u25aa LOGICAL_READS_PER_CALL  \u2013 specify the allowed number of data \nblocks read for a call to process a SQL statement.  \n\u25aa PRIVATE_SGA  \u2013 specify the amount of private memory space that a \nsession can allocate in the shared pool of the system global area (SGA).  \n\u25aa COMPOSITE_LIMIT  \u2013 specify the total resource cost for a session, \nexpressed in service units. The total service units are calculated as a \nweighted sum of \nof CPU_PER_SESSION  CONNECT_TIME,  LOGICAL_READS_PER\n_SESSION, and  PRIVATE_SGA.  \n\u2713 Password_parameters  \n\u25aa You use the following clauses to set the limits for password parameters:  \n\u25aa FAILED_LOGIN_ATTEMPTS  \u2013 Specify the number of consecutive \nfailed login attempts before the user is locked. The default is 10 times.  \n\u25aa PASSWORD_LIFE_TIME  \u2013 specify the number of days that a user can \nuse the same password for authentication. The default value is 180 days.  \n\u25aa PASSWORD_REUSE_TIME  \u2013 specify the number of days before a \nuser can reuse a password.  \n\u25aa PASSWORD_REUSE_MAX  \u2013 specify the number of password changes \nrequired before the current password can be reused. Note that you must \nset values for \nboth PASSWORD_REUSE_TIME  and PASSWORD_REUSE_MAX  pa\nrameters make these parameters take effect.  \n\u25aa PASSWORD_LOCK_TIME  \u2013 specify the number of days that Oracle \nwill lock an account after a specified number of a consecutive failed \nlogin. The default is 1 day if you omit this clause.  ",
    "Page8": "\u25aa PASSWORD_GRACE_TIME  \u2013 specify the number of days after the \ngrace period starts during which a warning is issued and login is \nallowed. The default is 7 days when you omit this clause.  \n\u2713 Note that to create a new profile, your user needs to have the  CREATE \nPROFILE  system privilege.  \n \n \n2)Define a Database Link. Discuss the different ways of creating the Database \nLinks. Explain the different methods of creating a Database Link.  \n\u2713 It is a connection from one DB to another DB  \n\u2713 The linked DBs can be like  \n\u25aa Both be ORACLE10g  \n\u25aa Both be SQL Server  \n\u25aa Mix of ORACLE10g and SQL Server  \n\u2713 A DB link enables a user to perform Data Manipulation Language (DML) or \nany other valid SQL statements on a DB.  \n\u2713 The following figure gives the architecture of  DB Link  \n\u2713 In Oracle 10g ,DB Links can be created in two ways as  \n          1. Public \u2013  Which makes the database links accessible by every user in DB  \n          2.Private \u2013 Which gives the ownership of the database to a user  \n                The DB is not accessible by any other user unless the user has        \n                              been access by the owner    \n \n \n \n\u2713 In Oracle 10g ,DB  Links can be created in two ways as  \n          1. Public \u2013  Which makes the database links accessible by every user in DB  \n          2.Private \u2013 Which gives the ownership of the database to a user  \n                The DB is not accessible by any other user unless the user has        \n                              been access by the owner  \nAuthentication Methods  \n\u2713 Authentication methods for connecting ORACLE10g DB using DB link \nmechanism.  \nDB1 \n DB2 \n DB LINK  ",
    "Page9": "\u2713 There are three types of authentication methods when creating a DB link.  \n\u2713 Authentication Method 1: CURRENT USER  \n\u25aa This authentication method orders ORACLE10g to use the current user \ncredentials for authentication to the DB to which the user is trying to link.  \n\u2713 Authentication Method 2: FIXED USER  \n This authentication method orders ORACLE10g to use the user  \n password provided in this clause for authentication to the DB to  which \nthe user is trying to link.  \n\u2713 Authentication Method 3: CONNECT USER  \n This authentication method orders ORACLE10g to use  credentials of the \nconnected user who has an existing account in  the database to which the user is \ntrying to link.  \n \n3)With Neat Sketch, Explain about the different steps to be followed for creating \nan ORACLE log User.  \n4)Explain about Granting and Revoking the privileges in SQL Server with \nsuitable query.  \nSQL GRANT Command  \n SQL GRANT is a command used to provide access or privileges on  the \ndatabase objects to the users.  \n\u2713 The Syntax for the GRANT command is:  \n GRANT privilege_name ON object_name TO {user_name |PUBLIC \n |role_name} [WITH GRANT OPTION];  \n\u2713 privilege_name  is the access right or privilege granted to the user. Some of the \naccess rights are ALL, EXECUTE, and SELECT.  \n\u2713 object_name  is the name of an database object like TABLE, VIEW, STORED \nPROC and SEQUENCE.  \n\u2713 user_name  is the name of the user to whom an access right is being granted.  \n\u2713 PUBLIC  is used to grant access rights to all users.  \n\u2713 ROLES  are a set of privileges grouped together.  \n\u2713 WITH GRANT OPTION  - allows a user to grant access rights to other users.  \nEaxmple :  \n SQL > Grant select on emp to bmnantha;  \n Grant succeeded  ",
    "Page10": "The schema owner of emp object gave select privilege to user bmnantha  \nSQL REVOKE Command:  \n The REVOKE command removes user access rights or privileges to the \n database objects.  \n\u2713 The Syntax for the REVOKE command is:  \n REVOKE privilege_name ON object_name  \n FROM {user_name |PUBLIC |role_name}  \n\u2713 Example :  \n SQL > Revoke select on emp from bmnantha;  \n Revoke succeeded  \n  \n The schema owner of emp object get back the  select privilege to user \n bmnantha  \nPrivileges in SQL Server  \nDatabase Privileges \u2013 Statement permissions  \n\u2713 CREATE TABLE  \n\u2713 CREATE VIEW  \n\u2713 CREATE PROCEDURE  \n\u2713 CREATE FUNCTION  \n\u2713 CREATE DEFAULT  \n\u2713 CREATE ROLE  \n\u2713 BACKUP DATABASE  \n\u2713 BACKUP LOG  \nPrivileges in SQL Server  \nServer Privileges  \n\u2713 Sysadmin     \u2013 Can perform any function within the system  \n\u2713 Serveradmin    \u2013 Can perform certain server -level functions.  \n\u2713 Setupadmin      \u2013 Can manage linked servers and startup procedures  \n\u2713 Securityadmin \u2013 Can manage logons, change passwords  \n\u2713 Processadmin  \u2013 Can manage processes running  \n\u2713 Dbcreator         \u2013 Create, Alter and Drop Databases  \n\u2713 Diskadmin       \u2013 Can manage the disk files for the server and database  \n\u2713 Bulkadmin       \u2013 Can insert bulk insert operations  ",
    "Page11": " \n \n \n \n \nUnit 3 \u2013 4 Marks  \n1. Why the encryption  process is important in Database  Security?  \nData Encryption  \n\u2713 Encryption is a security method in which information is encoded in such a way \nthat only authorized user can read it.  \n\u2713 It uses encryption algorithm to generate ciphertext that can only be read if \ndecrypted.  \n\u2713 Types of Encryption  \n\u2713 There are two types of encryptions schemes as listed below:  \n\u25aa Symmetric Key encryption  \n\u25aa Public Key encryption  \n \n2. Write the short notes on column  level  VPD.  \nColumn level Security with SQL Server  \n\u2713 Column level permissions provide a more granular level of security for data in \nyour database. You do not need to execute a separate GRANT or DENY \nstatements for each column; just name them all in a query:  \nGRANT SELECT ON data1.table (column1, column2) TO user1;  \nGO  \nDENY SELECT ON data1.table (column3) TO user1;  \nGO \n\u2713 If you execute a DENY statement at table level to a column for a user, and after \nthat you execute a GRANT statement on the same column, the DENY permission \nis removed and the user can have access to that column. Similarly, if you execute \nGRANT and then DENY, the DENY permission  will be in force.  \n \n3)Briefly explain about the different Application Types  \n \n  Mainframe Applications:  Centralized applications running on large, powerful mainframe computers, \nprimarily used for critical business operations and processing large volumes of data.  \n  Client/Server Applications:  Distributed applications where the server hosts resources and services, and ",
    "Page12": "the client accesses and uses those resources over a network.  \n  Web Applications:  Applications that run on a web server and are accessed through a web browser via the \ninternet or an intranet.  \n  Data Warehouse Applications:  Systems designed for analytical processing and reporting, aggregating \ndata from various sources into a central repository to support business intelligence activities.  \n \n4)Briefly explain the architecture of Virtual Private Databases.  \n \n\u2022  Policy Enforcement Point (PEP):  \nThis is the core component of the VPD architecture. It intercepts SQL statements issued by users or \napplications to the database.  \n\u2022  Security Policies:  \nThese define the rules for restricting access to rows and columns based on specific conditions such as user \nroles, user attributes, or SQL conditions.  \n\u2022  Context and Label Security:  \nVPD uses context and label security to determine which rows or columns a user can access. Context can be \nbased on session information, while label security can be based on data classifications.  \n\u2022  Predicate Functions:  \nThese are user -defined functions that evaluate the security policies defined for the database. They are used to \ndynamically append WHERE clauses to SQL queries to enforce access control.  \n\u2022  Fine-Grained Access Control:  \nVPD provides fine -grained access control, allowing administrators to specify detailed conditions for accessing \ndata. This ensures that users only see the data they are authorized to access.  \n \n \n \n \n \n \n \n \n \n5)Compare Symmetric and public key encryptions schemes.  ",
    "Page13": " \n \n6)Write short notes on Client / Server architecture.  \nclient/Server architecture in database security refers to a model where database systems are \nstructured into two primary components: the client, which initiates requests for data or operations, \nand the server, which manages and provides access to the database. Here are some key points:  \n1. Client Responsibilities : \no Initiates database requests such as querying data, inserting, updating, or deleting \nrecords.  \no Provides user interface and application logic for interacting with the database.  \no May perform initial data processing before sending queries to the server.  \n2. Server Responsibilities : \no Stores and manages the actual database and its data.  \no Receives requests from clients, processes them, and returns results.  \no Manages concurrency control, transactions, and ensures data integrity and security.  \nCommunication : \n\u2713 Clients and servers communicate typically over a network using standard protocols (e.g., \nTCP/IP).  \n\u2713 Requests from clients are structured in a format understandable by the server (e.g., SQL \nqueries).  \n\u2713 Responses from the server contain requested data or acknowledge successful operations.  \n",
    "Page14": " \n \n \n \n12 Marks  \n1. Explain the architecture of security data model based on Application \nroles.  \nSecurity Model based on Application Roles  \n\u2713 When considering this security model , keeps this point in mind  \n\u25aa This model is primitive and does not allow the flexibility required to \nmake changes necessary for security  \n\u25aa Privileges are limited to any combination  like read, add, read / update \n/ admin and so on  \n\u25aa The following list presents characteristics of this security model  \n\u25aa Isolating the application security from the database  \n\u25aa Only one role is assigned to an application user  \n\u25aa This lowers the risk of database violations  \n\u25aa Passwords must be securely encrypted  \n\u25aa The application must use a real database  user to log on and connect to \nthe application database  \n \nSecurity model based on Application Roles and Functions  \n\u2713 It is a combination of both the role and function security model  \n\u2713 Depends on the application to authenticate the application users  \n\u2713 The application authenticates users by maintaining all end users in a table \nwith their encrypted passwords  \n\u2713 Applications are divided into functions and roles are assigned to functions \nthat are in turn assigned to users.  \n\u2713 This model is highly flexible in implementing application security.  \n",
    "Page15": " \n \n2. Discuss the different steps involved in the Virtual Private Network \n(VPD) setup with suitable syntax.  \nVPD (Virtual Private Database) is shared database schema containing data  \n     that belongs to many users , and each user can view or manipulate  \n     the data the user owns  \n\u2713 Not every database system offers a mechanism to implement VPD with out \nVIEW objects.  \n\u2713 ORACLE offered VPD in several versions before the release of 10G  \n\u2713 ORACLE uses two other names to refer VPDs  \n\u25aa Row Level Security (RLS)  \n\u25aa Fine Grain Access (FGA)  \nSecurity model based on Application Roles and Functions  \n\u2713 It is a combination of both the role and function security model  \n\u2713 Depends on the application to authenticate the application users  \n\u2713 The application authenticates users by maintaining all end users in a table \nwith their encrypted passwords  \n\u2713 Applications are divided into functions and roles are assigned to functions \nthat are in turn assigned to users.  \n\u2713 This model is highly flexible in implementing application security.  \n \n \n3. What  are the two types of security models ? Explain  in detail  with  suitable \nexample for each type.  \nThere are two security models  \na. Access Matrix Model  \nb. Access Modes Model  \n ",
    "Page16": " \nAccess Modes Model  \n\u2713 This model based on the Take -Grant models  \n\u2713 It uses both subject and object  \n\u2713 Object is the main security entity  \n\u2713 Access mode indicates that the subject can perform any task or not  \n\u2713 There are two modes  \n\u25aa Static Modes  \n\u25aa Dynamic Modes  \n\u2713 Mainframe applications  \n\u2713 Client / Server Applications  \n\u2713 Web Applications  \n\u2713 Data warehouse applications  \n \n4. Discuss,  how to create  Security  policies in  VPD  and write  PL/ SQL  using \noracle  to test if VPD  is working correctly?  \n5. Give the importance of password policies. Explain in detail about the design \nand implementation of password policies.  \n"
}